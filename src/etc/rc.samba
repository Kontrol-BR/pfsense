#!/bin/sh
# KONNTROL TECNOLOGIA EPP - 2016 - 2020 - All rights reserved
#
clear
echo
echo "*** Checking if KontrolSSO is Installed ***"
echo
if [ ! -f /usr/local/etc/smb4.conf ]; then  echo "KontrolSSO not installed - Please install it first."; sleep 5; echo; exit
else
echo "KontrolSSO is installed"
fi

echo
echo "****************************"
echo "*******   WARNING    *******"
echo "****************************"
echo
echo "This process will change the existing data on your"
echo "KONTROLSSO configuration files"
echo
while true; do

	echo
	echo "In order to configure KONTROLSSO and Transparent Authentication"
	echo "this machine must be previously configured using the WEBGUI"
	echo "The Hostname, DNS, NTP, IP Address and Gateway must be "
	echo "already configured to continue..."
	echo
    read -p "Are you sure you want to continue? y/n  " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) echo; echo "Process Cancelled. Review all items above and restart the process."; exit;;
        * ) echo "Please enter y or n.";;
    esac
done

echo
echo
echo
	while true; do
	read -p "Will you use Transparent Proxy with Authentication? y/n  " yn
    case $yn in
        [Yy]* ) echo
				echo "Enter the ID used to retrieve information from desktops"
				echo "The account MUST have administrator permissions on local desktops"
				echo "or must be a DOMAIN admin account e.g. DOMAIN\account or account"
				echo
				read -r account
				echo
				echo "Enter the password for: $account"
				stty -echo
				printf "Password: "
				read -r password
				stty echo
				printf "\n"
				echo
				accountsafe=$(printf '%s\n' "$account" | sed 's/[\&/]/\\&/g')
				passwordsafe=$(printf '%s\n' "$password" | sed 's/[\&/]/\\&/g')
				sed -i "" s/.*/"$accountsafe"%"$passwordsafe"/ /root/credential
				echo
				echo

	domain=`hostname -d`
	echo
	echo "Enter the AD/KDC FQDN or IP Address:"
	echo "Typically that is the AD Controller FQDN (eg. servername.domain.com)"
	echo "Just press <ENTER> if you don't have any AD Domain server"
	echo
	read ad_srv

	sed -i "" "9s/.*/define('DOMAIN_FQDN', '$domain');/" /usr/local/www/login2.php
	sed -i "" "10s/.*/define('LDAP_SERVER', '$ad_srv');/" /usr/local/www/login2.php
	echo

				echo "All Set. Transparent Authentication is configured"
				echo "Check SQUID config now"
				echo
				echo
				sleep 3
				exit;;

		[Nn]* ) break;;
        * ) echo "Please enter y or n.";;
    esac
done

iface_avail=`ifconfig -l`

echo
echo
echo "********************* ATTENTION **********************"
echo "**DO NOT ENABLE KONTROLSSO ON WAN/LINK INTERFACES!!!**"
echo "******************************************************"
echo ""
echo "Enter the interfaces you want to enable KontrolSSO on:"
echo "eg. re0 em0 igb0 -   use space between multiple values."
echo "Available Interfaces are: ${iface_avail} "
echo "loopback/lo0 is set automatically "
read iface_input

smb_workgroup=`hostname -d | cut -d. -f1`
smb_workgroup_upper=$( echo $smb_workgroup | tr '[:lower:]' '[:upper:]' )

echo
echo "DOMAIN NAME to be used --> $smb_workgroup_upper "
echo "Enter the KDC FQDN or IP Address:"
echo "Typically that is the AD Controller FQDN (eg. servername.domain.com)"
echo
read ad_kdc

smb_realm=`hostname -d | tr '[a-z]' '[A-Z]'`

smb_domain=`hostname -d`


	echo
	echo $smb_realm "<-- This will be the REALM name"
    echo
    echo $smb_workgroup_upper "<-- This will be the DOMAIN name"
	echo
	echo $ad_kdc "<-- AD Controller / KDC"

	echo


while true; do
    echo
	read -p "Is the information above correct? y/n  " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) echo; echo "Check the required information and restart the process"; exit;;
        * ) echo "Please enter y or n.";;
    esac
done

sed -i "" "s/^interfaces.*/interfaces = lo0 ${iface_input}/" /usr/local/etc/smb4.conf

sed -i "" "s/^workgroup.*/workgroup = ${smb_workgroup_upper}/" /usr/local/etc/smb4.conf

sed -i "" "s/^realm.*/realm  = ${smb_realm}/" /usr/local/etc/smb4.conf

sed -i "" "7s/.*/idmap config ${smb_workgroup_upper} : backend = rid /" /usr/local/etc/smb4.conf

sed -i "" "8s/.*/idmap config ${smb_workgroup_upper} : range = 10000-20000 /" /usr/local/etc/smb4.conf

sed -i "" "2s/.*/default_realm = ${smb_realm}/" /usr/local/etc/krb5.conf

sed -i "" "14s/.*/   ${smb_realm} = { /" /usr/local/etc/krb5.conf

sed -i "" "15s/.*/   kdc = ${ad_kdc}/" /usr/local/etc/krb5.conf

sed -i "" "16s/.*/   admin_server = ${ad_kdc}/" /usr/local/etc/krb5.conf

sed -i "" "17s/.*/   default_domain = ${smb_domain}/" /usr/local/etc/krb5.conf

sed -i "" "21s/.*/  .${smb_domain} = ${smb_realm} /" /usr/local/etc/krb5.conf

sed -i "" "22s/.*/   ${smb_domain} = ${smb_realm} /" /usr/local/etc/krb5.conf


# RESTARTING WINBINDD Getting the PID of the Winbindd process and kill it
PID=`pgrep winbindd`

# Number of seconds to wait before using "kill -9"
WAIT_SECONDS=5

# Counter to keep count of how many seconds have passed
count=0

while kill $PID > /dev/null
do
    # Wait for one second
    sleep 1
    # Increment the second counter
    count=$((count+1))

    # Has the process been killed? If so, exit the loop.
    if ! ps -p $PID > /dev/null ; then
        break
    fi
    # Have we exceeded $WAIT_SECONDS? If so, kill the process with "kill -9"
    # and exit the loop
    if [ $count -gt $WAIT_SECONDS ]; then
        kill -9 $PID
        break
    fi
done
#Starting WINBINND DAEMON MODE
/usr/local/sbin/winbindd --daemon --configfile=/usr/local/etc/smb4.conf
echo
echo
chown root:proxy /var/db/samba4/winbindd_privileged
#chmod -R 0770 /var/db/samba4/winbindd_privileged
echo
echo
echo
echo
echo "******************************************"
echo "**************     DONE     **************"
echo "******************************************"
